import mx.core.UIComponent;import mx.controls.CheckBox;import mx.utils.Delegate;import mx.controls.NumericStepper;class iconeCellRenderer extends UIComponent{//	var check : MovieClip;	var listOwner : MovieClip; // the reference we receive to the list	var getCellIndex : Function; // the function we receive from the list	var	getDataLabel : Function; // the function we receive from the list		// UI	var download_btn:Button;	var open_btn:Button;	var del_btn:Button;	var icon_mc:MovieClip; // will contain the icon	// constants :	var preferedHeight:Number=44;		//	var currentIcone:String="none";			function iconeCellRenderer()	{			}	function createChildren(Void) : Void	{/*		check = createObject("CheckBox", "check", 1, {styleName:this, owner:this});		check.addEventListener("click", this);*/		size();		download_btn.onRelease=Delegate.create(this,download_cbk);		open_btn.onRelease=Delegate.create(this,open_cbk);		del_btn.onRelease=Delegate.create(this,del_cbk);	}	// note that setSize is implemented by UIComponent and calls size(), after setting	// __width and __height	function setValue(str:String, item:Object, sel:Boolean) : Void	{/*		trace("setValue");		for (var idx in item)		{			trace(idx+"->"+item[idx]);		}/**/		//check._visible = (item!=undefined);		//check.selected = item[getDataLabel()];		if (item==undefined)		{			_parent._visible = false;			return;		}				_parent._visible=true;		//trace("iconeCellRenderer setValue listOwner "+listOwner+" - icon : "+item[listOwner._parent.itemTypeField]);//		var item:MovieClip=listOwner.dataProvider[getCellIndex().itemIndex];		if (currentIcone!=item[listOwner._parent.itemTypeField])		{// change the icone			currentIcone=item[listOwner._parent.itemTypeField];			// display the icone (file, folder or backFolder)			icon_mc.attachMovie(item[listOwner._parent.itemIconField],"icon_mc",0);		}		del_btn._visible=true;		download_btn._visible=true;		open_btn._visible=false;		if (item[listOwner._parent.itemTypeField]=="folder")		{			download_btn._visible=false;			open_btn._visible=true;			if (item[listOwner._parent.itemNameField]=="..")			{// back folder 				open_btn._visible=false;				icon_mc.onRelease=Delegate.create(this,open_cbk);				del_btn._visible=false;			}			/*icon_mc.onRelease=function()			{				var item:MovieClip=_parent.listOwner.dataProvider[_parent.getCellIndex().itemIndex];				trace("iconeCellRenderer listOwner="+_parent.listOwner+" - "+item);				_parent.listOwner._parent.ftpWebService.getFtpContent(item[_parent.listOwner._parent.itemNameField]);			}*/		}		else		{			/*icon_mc.onRelease=function () 			{				var item:MovieClip=_parent.listOwner.dataProvider[_parent.getCellIndex().itemIndex];				trace("iconeCellRenderer listOwner="+_parent.listOwner+" - "+item);				_parent.listOwner._parent.ftpWebService.downloadFile(item[_parent.listOwner._parent.itemNameField]);			}*/		}	}	function del_cbk()	{//		delete listOwner._parent.silex_ptr.dbdata_obj.cart_array[listOwner.dataProvider[getCellIndex().itemIndex].id];// 		listOwner._parent.update();//		listOwner._parent.recalculate();		var item:MovieClip=listOwner.dataProvider[getCellIndex().itemIndex];		listOwner._parent.ftpWebService.deleteItem(item[listOwner._parent.itemNameField]);	}	function download_cbk()	{		var item:MovieClip=listOwner.dataProvider[getCellIndex().itemIndex];		listOwner._parent.ftpWebService.downloadFile(item[listOwner._parent.itemNameField]);	}	function open_cbk()	{		var item:MovieClip=listOwner.dataProvider[getCellIndex().itemIndex];		listOwner._parent.ftpWebService.getFtpContent(item[listOwner._parent.itemNameField]);	}	function getPreferredHeight(Void) : Number	{		return preferedHeight;	}	function getPreferredWidth(Void) : Number	{		return listOwner._width;	}	function size(Void) : Void	{/*		check.setSize(20, __height);		check._x = (__width-20)/2;		check._y = (__height-16)/2;*/		//_width=__width;		//_height=__height;	}}