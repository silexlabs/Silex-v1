<?xml version="1.0" encoding="utf-8"?>
<ns:StdUIBody xmlns:fx="http://ns.adobe.com/mxml/2009" 
			  xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:ns="org.silex.wysiwyg.toolboxes.toolboxes_base.*" 
			  width="100%"
			  xmlns:library="org.silex.wysiwyg.ui.library.*" xmlns:ui="org.silex.wysiwyg.ui.*" creationPolicy="all">
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import nl.demonsters.debugger.MonsterDebugger;
			
			import org.silex.wysiwyg.event.PluginEvent;
			import org.silex.wysiwyg.event.ToolsEvent;
			import org.silex.wysiwyg.io.ToolConfig;
			
			
			/**
			 * an array storing the extensions allowed in the library
			 */ 
			private var _libraryFilters:Array;
			
			
			/**
			 * When the user selects a media, send an event that will add a new component
			 * using this media. Send the url of the media
			 */ 
			private function onSelectLibraryItem(event:PluginEvent):void
			{
				dispatchEvent(new ToolsEvent(ToolsEvent.CHOOSE_MEDIA, event.data));
			}
			
			/**
			 * the setter of the targetPath, refresh the library
			 */ 
			public function set targetPath(value:String):void
			{
				wysiwygLibrary.targetPath = value;
			}
			
			/**
			 * refreshes the library
			 */ 
			public function refreshLibrary():void
			{
				wysiwygLibrary.refreshLibrary();
			}
			
			/**
			 * the setter for the library filter, refresh the library and displays only
			 * allowed extensions
			 */ 
			public function set libraryFilters(value:Array):void
			{
				_libraryFilters = value;
				wysiwygLibrary.libraryFilters = value;
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Placer ici les éléments non visuels (services et objets de valeur, par exemple). -->
	</fx:Declarations>
	<library:WysiwygLibrary id="wysiwygLibrary" width="100%" height="100%"
							selectLibraryItem="onSelectLibraryItem(event)"
							/>
</ns:StdUIBody>
